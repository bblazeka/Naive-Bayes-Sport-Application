scalar Date  
  
  type Query {
    player(id: Int): Player
    searchPlayerByName(name: String): [Player]
    selectedPlayers: SelectedPlayers
    team(id: Int): DetailedTeam
    teams: [Team]
    teamLocations: [Location]
    articles(query: String): [Article]
    tweets(query: String): [Tweet]
    twitterApiStatus: TwitterStats
    schedule(start: String, end: String): [ScheduleTeam]
    scheduleByTeam(id: Int, start: String, end: String): [BasicGame]
    standings(season: String): [Record]
    gamesBetweenTeams(homeId: Int, awayId: Int): [BasicGame]
    game(gameId: Int): Game
    geocode(query: String): [Location]
  }

  type Mutation {
    addSelectedPlayer(id: Int): SelectedPlayers
    deleteSelectedPlayer(id: Int): SelectedPlayers
    clearSelectedPlayers: SelectedPlayers
  }

  type Team {
    id: Int
    abbreviation: String
    name: String
    active: Boolean
    rosterResponse: [Player]
  }

  type Venue {
    id: Int,
    name: String,
    city: String,
    description: String,
    timeZone: TimeZone
  }

  type TimeZone {
    id: String,
    offset: Int,
    tz: String
  }

  type LineInt {
    x: String,
    y: Int
  }